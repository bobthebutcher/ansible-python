- name: Check if "{{ python_versions.python2.version }}" version is already installed
  stat: 
    path: "{{ install_dir }}/bin/{{ python_versions.python2.py_link }}"
  register: python2_version

- name: Check if "{{ python_versions.python3.version }}" is already installed
  stat: 
    path: "{{ install_dir}}/bin/{{ python_versions.python3.py_link }}"
  register: python3_version

- name: Download python
  get_url: 
    url: "https://www.python.org/ftp/python/{{ item.value.release }}/Python-{{ item.value.release }}.tar.xz"
    dest: "{{ working_dir }}"
  when: not {{ item.value.py_link }}_version.stat.exists
  with_dict:
    - "{{ python_versions }}"

- name: Expand python archive archive.
  unarchive: 
    src: "{{ working_dir }}/Python-{{ item.value.release }}.tar.xz"
    dest: "{{ working_dir }}"
    creates: "{{ working_dir }}/Python-{{ item.value.release }}"
    copy: False
  with_dict:
    - "{{ python_versions }}"

- name: Build python
  shell: "cd {{ working_dir }}/Python-{{ item.value.release }}  && ./configure --prefix={{ install_dir }} && make altinstall"
  with_dict:
    - "{{ python_versions }}"

- name: Create symlink to python3 version
  file: 
    src: "{{ install_dir }}/bin/python{{ item.vaule.version }}"
    dest: "/usr/bin/{{ item.vaule.py_link }}"
    owner: root
    group: root
    state: link
  with_dict:
    - "{{ python_versions.python3 }}"

